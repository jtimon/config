#+TODO: INTERNET CONFIG PRACTICE | DONE REM

* CONFIG Xmodmap
* CONFIG [0/1] Urgent
** [0/1] git
*** INTERNET github remember password
** [0/6] emacs
*** INTERNET session opened frames and windows
*** session opened shells
*** CONFIG change .emacs location:
	   - C-h v
	   - user-emacs-directory
*** CONFIG emacsclient -c
*** INTERNET divide .emacs with includes:
*** INTERNET links open with
*** INTERNET mail
*** [0/3] Annoying things
**** INTERNET shells ask to close
**** INTERNET shells session
**** INTERNET Not kill client when killing opened file
** [0/1] conkeror
*** INTERNET [1/3] windows (emacs frames)
- [X] open in new: find-url-new-window follow-new-window
- [ ] other-frame:
- [ ] C-x 5 0 close frame:
	C-x 5 0 is bound to the command delete-window 
*** rembember passwords
* PRACTICE git
** config
git config --global user.name "jtimon"
git config --global user.email "jtimonmv@gmail.com"
git config --global credential.helper cache
git config --global credential.helper 'cache --timeout=3600'
** projects
https://github.com/jtimon/freicoin.git
https://github.com/jtimon/villagescc.git
https://github.com/jtimon/freico.in.git
** Create a new repository on the command line (github example)
touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/jtimon/config.git
git push -u origin master
** proxy
git config --global http.proxy http://jtimon:password@proxy.indra.es:8080
** clone to target directory
cd ~
git init
git remote add origin https://github.com/jtimon/config.git
git pull origin master
* INTERNET windows
** customize keys
** [0/5] emacs
*** hide title bar
*** start maximized
** windows manager
- http://sourceforge.net/projects/virtuawin/forums/forum/257054
- http://virtuawin.sourceforge.net/?page_id=9
** INTERNET open with... parameters to programs
emacsclient -c
* CONFIG [0/2] freicoin
** sudo add-apt-repository ppa:freicoin/testing
** sudo apt-get install freicoind freicoin-qt
** sudo add-apt-repository ppa:bitcoin/bitcoin
** sudo apt-get install libdb4.8-dev libboost-dev libminiupnpc-dev
** sudo apt-get install libmpfr-dev libgmp-dev
** find and download db-4.8.30.NC.tar.gz
tar -xf db-4.8.30.NC.tar.gz
pushd db-4.8.30.NC/src/db-4.8.30.NC/build_unix
../dist/configure --host=x86_64-pc-linux-gnu --enable-cxx
make && make install
** CONFIG Vamos por aqui

libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sbin" ldconfig -n /usr/local/BerkeleyDB.4.8/lib
----------------------------------------------------------------------
Libraries have been installed in:
   /usr/local/BerkeleyDB.4.8/lib

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the `-LLIBDIR'
flag during linking and do at least one of the following:
   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
     during execution
   - add LIBDIR to the `LD_RUN_PATH' environment variable
     during linking
   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag
   - have your system administrator add LIBDIR to `/etc/ld.so.conf'

include /etc/ld.so.conf.d/*.conf

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.
*** maaku:

depends on where it was installed
but yes, I would try adding it to the path with CFLAGS
or editing the makefile directly
** CONFIG make -f makefile.unix
** Test
/home/jtimon/workspace/freicoin/src/freicoind -daemon


sendtoaddress <freicoinaddress> <amount> [comment] [comment-to]

/home/jtimon/workspace/freicoin/src/freicoind sendtoaddress 1DUDHrfNgzb4ks7PhMgHxcxzBNBmqprtXf 10 aaaaa


/home/jtimon/workspace/freicoin/src/freicoind gettransaction eb9528f5a22c97624fd272bd0b2f90d73a2b6dbb267c23067ff3dee2c8f67089
** IRC
jtimon_ (~quassel@209.pool85-53-130.dynamic.orange.es) has joined #freicoin
Mode #freicoin +cnt by cameron.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@123.pool85-59-206.dynamic.orange.es) has quit (Ping timeout: 256 seconds)
maaku (~maaku@128.102.238.62) has joined #freicoin
{Day changed to Thu Nov 1 00:00:00 2012}
jtimon_ (~quassel@209.pool85-53-130.dynamic.orange.es) has quit
jtimon (~quassel@209.pool85-53-130.dynamic.orange.es) has joined #freicoin
Mode #freicoin +cnt by holmes.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@209.pool85-53-130.dynamic.orange.es) has quit
jtimon (~quassel@209.pool85-53-130.dynamic.orange.es) has joined #freicoin
[freenode-info] help freenode weed out clonebots -- please register your IRC nick and auto-identify: http://freenode.net/faq.shtml#nicksetup
Mode #freicoin +cnt by pratchett.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@209.pool85-53-130.dynamic.orange.es) has quit
jtimon (~quassel@209.pool85-53-130.dynamic.orange.es) has joined #freicoin
Mode #freicoin +cnt by gibson.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
{Day changed to Fri Nov 2 00:00:00 2012}
jtimon (~quassel@209.pool85-53-130.dynamic.orange.es) has quit
jtimon (~quassel@181.pool85-53-137.dynamic.orange.es) has joined #freicoin
Mode #freicoin +cnt by lindbohm.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has quit (Remote host closed the connection)
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has joined #freicoin
jtimon (~quassel@181.pool85-53-137.dynamic.orange.es) has quit
jtimon (~quassel@181.pool85-53-137.dynamic.orange.es) has joined #freicoin
Mode #freicoin +cnt by rajaniemi.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@181.pool85-53-137.dynamic.orange.es) has quit
jtimon (~quassel@181.pool85-53-137.dynamic.orange.es) has joined #freicoin
Mode #freicoin +cnt by adams.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@181.pool85-53-137.dynamic.orange.es) has quit (No Ping reply in 180 seconds.)
{Day changed to Tue Nov 6 00:00:00 2012}
jtimon (~quassel@83.46.39.114) has joined #freicoin
Mode #freicoin +cnt by moorcock.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has quit (Ping timeout: 276 seconds)
maaku (~maaku@128.102.239.37) has joined #freicoin
Hi, maaku
I've not been able to test the little thing I did
I run the daemon and the modified command
but I'm not sure how to be sure that is working properly
which little thing…?
I've thought that directly debugging may be the best thing
this
https://github.com/jtimon/freicoin/commit/36f1f54beb9cdbaed15d3c8238cfd27eb4d47699
well, I shouldn't have commited the makefile
Am I in the right direction or very lost?
ah well yes that's on the right track
run the deamon, and then run RPC via the command line to test
freicoind help sendtoaddress
i think just try it out on the live network and see if it works as expected
I did that
but I'm not sure how do I know that it worked
I did
freicoind -daemon
and freicoind sendtoaddress 1DUDHrfNgzb4ks7PhMgHxcxzBNBmqprtXf 10 aaaaa
freicoind gettransaction <transaction-id-output-by-sendtoaddress>
however I suspect it won't work because SendMoneyToDestination doesn't respect wtx.nRefHeight
wallet.cpp line 1364
thanks
 "refheight" : 4134,
exactly, didn't work
actually there's a couple of places where wtx.nRefHeight is overridden--line 1175 as well
grep nBestHeight
hmmm
one of the reasons I put this off is I hadn't sat down to figure out the correct semantics of this--should nRefHeight be passed as a parameter? should it be set in wtx?
I changed the first one you mentioned
         
-    int nRefHeight = nBestHeight;
            1364         
+    int nRefHeight = wtxNew.nRefHeight;
            1365         
+    if (nRefHeight <= 0)
            1366         
+        nRefHeight = nBestHeight;
I did search for nBestHeight trying to understand it
but I don't remember getting to any conclusion on how it works
nBestHeight is the height of the current (best) block
I see
freicoind getblockcount return nBestHeight
so nRefHeight = nBestHeight is basically saying "make the transaction as-of the current height"
nCurrentHeight would have been a better name, if I wrote it
well, I guess the simplest thing would be to take nRefHeight as optional parameter and use nBestHeight when it isn't provided
I thought that was your idea
imho it's probably better to pass nRefHeight as an explicit parameter than implicitly as part of the wallet transaction
jtimon: yes
I think that's a good solution
some trades may involve negotiating the refHeight so it should be parametrizable
i just mean the internal semantics of how nRefHeight flows from sendmoneytoaddress() through SendMoneyToDestination() through SendMoney() through CreateTransaction() etc. all the way down to SelectCoins(), which actually uses nRefHeight to choose outputs
ahm
I don't really know
I guess the esiest is to make it mandatory in the non exposed methods (the lower ones)
conservative approach: add an nRefHeight parameter to each method, and in each if nRefHeight<=0, set it equal to nBestHeight
so optional in everyone of them
ok
I don't really know if it doesn't make sense in one particular case
actually I maybe it shouldn't be optional--nBestHeight is available everywhere
just make nRefHeight a required parameter, and the compiler will tell where else those APIs are called
but isn't it inside a CWalletTx object?
and in each case adding ", nBestHeight" to the parameter list would probably be appropriate, except for the RPC entry points where refheight can optionally be specified
yes, but the CWalletTx is overwritten in numerous locations
it's more of a return-value parameter
you mean refHeight on the last sentence?
yes
I don't undesrtand the last part, if nBestHeight is global...
ok
now I don't undesrtand "just make nRefHeight a required parameter, and the compiler will tell..." + "but the CWalletTx is overwritten in numerous locations"
how do you make an atributte of CWalletTx required?
where are the valuidations?
I mean if you change CWallet::SendMoneyToDestination() to take "int nRefHeight" as a required parameter (after "int64 nValue", perhaps), then all existing calls will generate compiler errors
It should be passed as a method parameter, not as part of the CWalletTx
oh, I finally get it
yes, that would make the change simpler
I thought refHeight was better inside the CWalletTx but you probably know better
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has joined #freicoin
Just work your way down the call hierarchy, adding "int nRefHeight" as a parameter to the next API in the call stack, and then fixing each call to that API elsewhere in the codebase (compiler errors are your friend)
Until eventually you hit bottom somewhere around SelectCoins, where nRefHeight is actually used in constructing the transaction
I see
but then we would place refHeigh back in?
The convention for those methods seems to be just to information as explicit parameters
CreateTransaction() overwrites the entire contents of CWalletTx
ok, wtxNew is just to be filled with data
Yes, exactly.
thank you, I'll do that new parameter thing
another question
to debug...what should I debug the deamon or the extern call?
I guess the daemon, but I haven't been able to debug it from eclipse
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has quit (Ping timeout: 276 seconds)
I can try using gdb directly
or from emcas
emacs
the daemon--the external call just calls the daemon
or the GUI and use the debug window
that might be easiest
I've only used gdb for stack traces--my debugging-fu isn
't very good
it is very helpful for me
although sometimes I discover I'm using the debugger just to read code
which is kind of stupid
Oh I get the value of debugging… it's just I do all my development from the command line on a Mac and despise Xcode
So short of learning gdb (scary!) I don't have many options for C++ debugging
what's despise Xcode?
You'd have to pry pdb (Python debugger) from my cold dead fingers though :P
despise: really dislike, Xcode: Apple's IDE for C++ developers
actually gdb from emacs wasn't bad
I see
I started using eclipse for java and then I got too used to some thing
s
Yeah that's part of why learning emacs has been on my list for so long
As I told you, I'm doing it slowly
I hate to configure things and I have to replace several things that eclipse gives you for free
but I'm optimistic because I'm using it very much
when I tried vim it was very different
at least for me, it's much harder to learn
My hangup is productivity, but I should probably just jump-in and learn it
I know I'm not going to be very productive for the first few weeks until I figure it all out, so I keep saying "I'll do it later"
yes, that's what scares me too
but I think exhuberant ctags and rgrep is most of what I need, so I may jump (at home) soon
oh, I forgot that I'm using git through eclipse too
very easy to use plugin
cscope is pretty cool too
yes, that's like Ctrl +g in eclipse I think
where is this called from?
cscope? it's a self-contained command line tool
although I'm sure there's emacs integration and such
I thought it was just for that
you select a class, method or variable and it gets you to were it's used
what selfcontained means in this context?
...to where it's...
stand-alone would have been a a better word choice
independent
ok
"all references to a symbol" is the feature I was talking about, but it seems to have more
I wonder why it doesn't substitute ctags altogether
maaku, one last thing about the commit I saw you
can't I remove the makefile part without changing it locally and making another commit?
it's not that tedious, but, who knows, maybe git can do that
git rebase -i HEAD~1
git reset HEAD <file>
git commit --amend
git rebase --continue
...there might be other ways to do it
you're changing history so you will have to force-push to github
thank you
and to rebase from gh/freicoin/freicoin to gh/jtimon/freicoin ?
I can't find any button on github for that
meaning… rebase your changes onto the current freicoin codebase?
fetch? the changes from the current codebase into my fork with my own changes
since you're doing your own work that no one else is tracking, the proper way is:
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has joined #freicoin
git rebase --onto gh/freicoin/freicoin <tree-id>
where <tree-id> is the hash of the first commit *prior to* yours
in this case: git rebase --onto gh/freicoin/freicoin e2b1a6d49a33a762b2ee2ef0eafe8718178b3f51
I see
I would do that from my local and then commit to my fork on gh, right?
be sure to fetch from gh/freicoin first
and then push to your fork on gh, yes
"rebase --onto" effectively extracts patches for each commit after the specified tree-id, and applies them after the --onto commit
usual process is right before a pull-request you do a "rebase --onto" the master branch
thank you, tomorrow I'll try these things
the more I know about git (well, DVCS) the less I can believe the pain we swallow merging everythin manually with starteam/svn at work
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has quit (Ping timeout: 276 seconds)
I've suggested to at least migrate to svn using polarion, but I'm just the crazy weird guy that uses emacs instead of pspad and complains about androMDA
hah, yeah; development before git is like computers before the internet ;)
s/git/any DVCS/
heheh
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has joined #freicoin
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has quit (Ping timeout: 276 seconds)
Guest10281 (~rdpontice@190.188.140.39) has joined #freicoin
Guest10281 (~rdpontice@190.188.140.39) has quit (Ping timeout: 246 seconds)
rdponticelli_ (~rdpontice@gateway/tor-sasl/rdponticelli) has joined #freicoin
rdponticelli_ is now known as rdponticelli
{Day changed to Wed Nov 7 00:00:00 2012}
    <maaku> Oh I get the value of debugging it's just I do all my development from the command line on a Mac and despise Xcode
well thats terribly embarrassing for me... i use a fulll ide and i cant keep up lol
jtimon are you here'
guess not :(
i have to put my car up brb
maaku (~maaku@128.102.239.37) has quit (Quit: maaku)
maaku (~maaku@50-0-36-26.dsl.dynamic.sonic.net) has joined #freicoin
maaku (~maaku@50-0-36-26.dsl.dynamic.sonic.net) has quit (Quit: maaku)
maaku (~maaku@50.0.36.26) has joined #freicoin
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by wright.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
maaku (~maaku@128.102.239.154) has joined #freicoin
anyone have any references for doing double-entry accounting on a demurrage currency?
i'm trying to derive accounting rules where money can rot but accounts still balance, but it's making my head hurt
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has quit (Ping timeout: 276 seconds)
rdponticelli (~rdpontice@gateway/tor-sasl/rdponticelli) has joined #freicoin
treat it as a negative interest?  *ducks*
trouble is that it compounds near-continuously, whereas methods for dealing with interest typically involve applying interest at regular intervals, even if it is hypothetically compounded continuously
that has real consequences when you consider operating a high-frequence exchange, for example, where the difference between actual vs adjusted prices and balances could be exploitable
{Day changed to Thu Nov 8 00:00:00 2012}
i think i found a system that works though--I'm augmenting my currency-amount object to be precise about demurrage, but keep a running total of losses which become part of the actual transaction
effectively negative interest compounded as needed, up to once-per-transaction
That's how freicoin works, isn't it?
demurrage is really calculated on transactions
is this for the exchange?
yes, for the exchange
it's similar to how freicoind works, except that bitcoin/freicoin isn't really a double-entry ledger
accounting for every single satoshi adds an extra headache :P
I guess I'm missing the additional problem that the double entry adds
it's just more accounting that needs to be done; it was more a question of "does anyone know an easy way to do this?"
maaku   you dont calculate it until it is spent
Can't you just use the same formula that is used in freicoin?
jtimon: I am using the same formula, but the underlying data model is different
in freicoin you have a list of outputs and its obvious when you assess demurrage: when the output is spent
well, always you want to calculate it
on the exchange you have an account with a balance--a single number representing what funds are available to you
accounting records only tract transactions not real time balances
in the chain you want to calculate it whenthere's a transaction but users calculate it every time they check their balanceç
in the exchange it would be something similar I think
you calculate it every time a user checks it or when there's a tx
galambo_: yes, but accounting records reference accounts to draw or post funds
and it would be hideously inefficient to sum a user's whole transaction history to show a balance
oh, I see
in freicoin you sum the outputs
here you make a total and a new reference block after each tx
you could consider chacking the balance as another transaction for this purpose
well thats not true
when he reads his balance you update the total and the ref block num
in essence, bitcoin's outputs are a one-use-only account
if you have checks or deposits
you refer to the checks or deposits
in bitcoins case you refer to the transaction
not sure I've explained myself, but I believe that's the simplest way to manage the accounts
maintaining a total and a ref block for that total for each user
you update it with transactions
you only apply the interest at a defined period
like 1 mo or 1 quarter
probably updating it when the users checks his balance is a bad idea for reconstructing from tx logs
if you want a real accounting system
"Every accounting entry is based on a business transaction, which is usually evidenced by a business document, such as a check or a sales invoice."
so if you get a recieve a check you refer to that check in your accounting journal
galambo_: yes, but then the available balance would drift with respect to the actual balance as freicoin blocks are found in-between demurrage (negative interest?) assessment periods
the accounting balance is seperate from a running balance or the number your bank tells you
each transaction (which is associated with a block number, even if the tx doesn't touch the chain) has a corresponding balance subtotal
and the total is not the subtotal from last tx
you use that subtotal and the refHeigh from that tx to calculate the current balance
its hard to find a good source
im looking
jtimon: I think that's the route I'm going to go…
Each transaction has an attached 'timestamp' and 'refperiod' (nRefHeight); same rules as freicoin: timestamps and refperiods must be monotonically increasing
In practice transactions will hold timestamps and refperiods of the time they were executed.
Each time a transaction posts or draws from an account, demurrage is applied and that account's timestamp and refperiod is updated.
The difference from applying demurrage is shuffled off to a special account so that the system as a whole balances.
.
I was very surprised to find that there is not a ready-made solution for this.
I guess no one else has had to deal with account balances continuously-changing due to interest/demurrage
well you are getting it confused
banks should do something similar with interest
http://www.bizfilings.com/toolkit/Libraries/Guidebook/bookke.sflb.ashx
businesses dont look at accounting statements for their real time balance
insurance companies have saving products and we have dates everywhere in the database
they use the accounting information to prepare statements
probably the thing that makes this more different is counting time with blocks instead of miliseconds rather than the interest being positive or negative
jtimon: yeah, but I also have applications in mind that demurrage with respect to real time, so I'm designing a system to track both… ugh
ugh, a hybrid demurrage system can complicate things much
I though you wanted to store the timestamps for other purposes
well yes, dual purposes
so the demurrage will be always in terms of blocks, right?
but otherwise you wouldn't have to track timestamps with amounts per se, just with transactions
for freicoin, yes
http://blog.prolecto.com/2009/08/30/philosophies-on-batch-versus-real-time-accounting-systems/
the exchange I'm building is far more general… capable of trading any asset, including user-issued assets
the way real world exchanges work
when you hit the button
nothing actually happens
then at the end of the day they get a list of who owes what
sounds like ripple
and you have 3 days by law to transfer ownership rights
what they typically do is something called "netting"
and most assets will use the timestamp, I see
galambo_: isn't that just a historical and legal oddity though?
jtimon: yes, you could implement villages.cc within this exchange
sounds great
galambo_: I mean, part of what I'm doing is implementing a real-time accounting system that could replace those legacy exchanges
have you considered reusing ripplepay ?
you will still have to code the refHegih stuff for freicoin deposits
jtimon: haven't looked at ripplepay
y
i dont know it sure would be nice if we had someone here that has actually worked on these sorts of finance systems :(
ripplepay allows positive and negative interests
Well my dad does performance analysis on the machines that run NASDAQ
I've been hitting him up with questions along the way :)
https://github.com/rfugger/ripple
http://sourceforge.net/projects/ripple/
I think that last one is ripplepay
http://ripple-project.org/Main/Implementations
I've been reading: http://code.ripplepay.com/wiki
are you wanting to add this accounting system before release?
rain dropplet added reputation I think
I think he want to use it for the exchange, outside the protocol
galambo_: I want to add this exchange before release, yes
this has nothing to do with freicoind, which is 98% done
I forgot that link, seems better
except the git repo doesn't work :(
I think v2 was mainly refactoring to get closer to the decentralized protocol
and he finally decided to start from scratch
mail Ryan, I'm sure he will be happy to help you
galambo_: The "real time entry and review" section of that article you posted is exactly what I'm making
http://en.wikipedia.org/wiki/Two-phase_commit_protocol
galambo_: yes, and thankfully my rdms takes care of that for me :)
i just have to remember to start and commit transactions correctly, and use savepoints
i just dont know if you should run the exchange real time
you can display like running balances real time
but i think you should have settlement periods where you make sure everything is right occasionally
if you are going to combine exchange and the custodian this is very important otherwise you may become an inadvertant ponzi
jtimon: btw, here's a longer description of what I'm doing with open-transactions: http://pastebin.com/6x9cESi5
maaku (~maaku@128.102.239.154) has left #freicoin
maaku (~maaku@128.102.239.154) has joined #freicoin
maaku (~maaku@128.102.239.154) has quit (Quit: maaku)
maaku (~maaku@128.102.239.154) has joined #freicoin
stupid irc client..
" The protocol achieves its goal even in many cases of temporary system failure (involving either process, network node, communication, etc. failures), and is thus widely utilized.[1][2][3] However, it is not resilient to all possible failure configurations, and in rare cases user (e.g., a system's administrator) intervention is needed to remedy an outcome. To accommodate recovery from failure (automatic in most cases) the p
rotocol's participants use logging of the protocol's states. Log records, which are typically slow to generate but survive failures, are used by the protocol's recovery procedures. Many protocol variants exist that primarily differ in logging strategies and recovery mechanisms. Though usually intended to be used infrequently, recovery procedures comprise a substantial portion of the protocol, due to many possible failure sce
narios to be considered and supported by the protocol."
so it seems that to implement a real time system you must still have a batch processing system behind it
galambo_: my long term plan is to log transaction data and batch process it for accounting purposes
a natural consequence of which would be the ability to rebuild from log files, or recover from protocol/implementation bugs
http://en.wikipedia.org/wiki/Transaction_processing_system
 The essence of a transaction program is that it manages data that must be left in a consistent state, e.g. if an electronic payment is made, the amount must be both withdrawn from one account and added to the other; it cannot complete only one of those steps. Either both must occur, or neither. In case of a failure preventing transaction completion, the partially executed transaction must be 'rolled back' by the TPS. While
this type of integrity must be provided also for batch transaction processing, it is particularly important for online processing: if e.g. an airline seat reservation system is accessed by multiple operators, after an empty seat inquiry, the seat reservation data must be locked until the reservation is made, otherwise another user may get the impression a seat is still free while it is actually being booked at the time. With
out proper transaction monitoring, double bookings may occur. Other transaction monitor functions include deadlock detection and resolution (deadlocks may be inevitable in certain cases of cross-dependence on data), and transaction logging (in 'journals') for 'forward recovery' in case of massive failures.
maybe do some reading on SABRE air line seating reservation lol
i dont think that would help very much :P
thankfully the mechanics of this is handled by the database: http://www.postgresql.org/docs/9.1/static/mvcc.html
postgresql handles most of the tricky bits
as long as you pay attention to the various warnings and gotchas
i picked postgres specifically because of the good transaction support
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
luke-jr_ (~luke-jr@2001:470:5:265:222:4dff:fe50:4c49) has joined #freicoin
Luke-Jr (~luke-jr@2001:470:5:265:222:4dff:fe50:4c49) has quit (Read error: Connection reset by peer)
luke-jr_ is now known as Luke-Jr
maaku (~maaku@128.102.238.212) has quit (Quit: maaku)
maaku (~maaku@128.102.238.212) has joined #freicoin
asa1024 (~asa@unaffiliated/asa1024) has quit (Quit: asa1024)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by zelazny.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
Yay, my accounting code is finally done
{Day changed to Fri Nov 9 00:00:00 2012}
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
that's great, maaku, what solution did you ended up choosing?
The one we had talked about--tag all amounts with timestamp/reference-heights, apply demurrage on each posting, and credit the resulting 'residuals' (amounts compensating for demurrage and rounding) to special accounts for accounting purposes
about OTcoin...doesn't that make everything public?
of course, excluding the "untraceable cash" which only issuers trace and is not atomically tradeable so doesn't matter
I'm curious about your accounting engine
you said you needed the timestamps because you wanted to offer more assets different from freicoin deposits
issuers can't trace blinded tokens--at most they know it changed hands, but from whom and to whom is not revealed
is it about p2p lending or something related?
but yes OTcoin would be pseudo anonymous, like bitcoin
exactly just like in bitcoin if you chose a different address each time
well, for it to be the same thing you need to split the funds into tokens
the main flaw I see is that is not tradeable atomically for other things
no with bitcoin you have a chain of ownership (even if you don't know the real-world owners)
if a blinded token changes hands three times--was that the same coin? was that three different coins? you don't know
for example, you can trade freicoins for colored coins or two phase ripple IOUs atomically, but you can't trade UC without making a deposit on a trusted credit account
and with untraceable cash the issuer holds the chain
he doesn't know, just like the public reading the blockchain
whit the blockchain you can do things wrong for your privacy and with UC you can't, that's the only difference
luke-jr_ (~luke-jr@2001:470:5:265:222:4dff:fe50:4c49) has joined #freicoin
But you can achieve the same level of "untraceability" with bitcoin than with UC
Luke-Jr (~luke-jr@2001:470:5:265:222:4dff:fe50:4c49) has quit (Ping timeout: 260 seconds)
midnightmagic (~midnightm@unaffiliated/midnightmagic) has quit (Ping timeout: 260 seconds)
well, no...in bitcoin the sender knows what address he has sent the tokens to and in UC only the issuer and the receiver know it
I don't think that's a big deal, but anyway, the important thing is that UC can't make it into an atomic transaction with other instruments
the purpose of OTcoin is 1) a "banker's bank"--OT server operators can reconcile accounts between servers on the P2P network, rather than requiring each operator to have an account on every other server;
2) provide a distributed OT "server" with no points of failure--any p2p network node acts as a redundant backup server; so OT can be used without reliance on centralized infrastructure
3) as a consequence, allow distributed operation where not all parties need to be online; distributed ripple becomes trivially easy to implement, for example
midnightmagic (~midnightm@unaffiliated/midnightmagic) has joined #freicoin
UC is kinda a side-issue
yes, I find the idea very similar to colored coins or ripplecoin
it has the scripting contract language too
sort of; colored coins and ripplecoin adds OT-like capabilities to
bitcoin
this adds bitcoin-like features to OT
I just don't see the point of UC, in or out the chain
the goal's the same: fix the disadvantages of bitcoin with OT/ripple or vice versa
bitcoin is cash, OT and Ripple are credit
i'm talking technology, not economics
even Untr "cash" is really credit
sorry, I can't help to see them as different use cases
bitcoin is p2p distributed, OT and Ripple handle advanced asset types, markets, and credit well
yes
when you said bitcoin there I use to say the chain or something like that
I tend to identify bitcoin with the currency
s/bitcoin/block chain/
i'm just talking about hash-chains here
"fix the disadvantages of the blockchain with OT/ripple or vice versa"
yes
I see two-phase Ripple as the way to go for a more private system to parallely complement chains
for two-phase ripple you need to be always online so its less p2p too
What would really rock is to have a common scripting language for two-phase ripple and chains
any thoughts on somehow merging OT and bitcoin scripts?
not really; I envision a future where bitcoin-style transactions are only used for fundamental scarce-money: bitcoin & freicoin
Once I was thinking about building transactions as merkle trees
everything else will be OT
either traditional OT, federated (two-phase commit) OT, or p2p OT… but OT transaction format nonetheless
it's a far superior format
I'm not sure that what I mean by two phase commit is the same of what you mean by federated
how is the atomicity achieved within federated servers?
than bitcoing scripting? I do't doubt that
OT transactions are atomic
asa1024 (~asa@unaffiliated/asa1024) has joined #freicoin
the two-phase commit is about ordering transactions
OT tx within assets deposited in two different untrusted servers
if the servers don't trust each other, two phase commit won't get you anything
yes
you'd need proof-of-work
you can use a register or a chain
because proof-of-work is trustless--the data itself is self-validating
that's my OTcoin idea
but two-phase is private, the chain doesn't know anything
or the register
two phase commit is a protocol: http://en.wikipedia.org/wiki/Two-phase_commit_protocol
it has nothing to do with being public/private
sorry, I meant two-phase Ripple all along
link?
http://ripple-project.org/Protocol/Protocol
and for chain based commit http://ripple-project.org/Protocol/BlockChainCommitMethod
it only lacks a scripting commit method
registry commit, is that what you mean by "two-phase"?
the point of having a common scripting language is to have atomic transactions that involve chain and external (two-phase) assets with more complex contracts
that should include at least assets from two diff chains
i don't think that's necessary--just use the chain as a timestamping service for the external commit protocol
maybe i'm misunderstanding what problem, exactly, you are trying to fix
let's say you want to make this tx frc -> btc ->  chainIOU_A -> externIOU_B -> externIOU_C
this is probably harder frc ->  chainIOU_A -> externIOU_B -> externIOU_C -> btc
since you have two chains, you need https://en.bitcoin.it/wiki/Contracts#Example_5:_Trading_across_chains
a contract involving secrets
I haven't solved it yet, but I know it's possible with a common language
probably is possible without it too
just uglier
i think it's easier without; on each of your chains add an external dependency to the transaction format. semantics: "txn invalid until ____ external event occurs"
but how can a chain trust ____ external event ?
a chain cannot trust anything not in the chain. period.
the bitcoin wiki is wrong on this aspect
100% secure cross-chain trades are not possible
so the chain commit is the heavier and must prevail
yes, have a timestamping chain that acts as the 2nd phase for a two phase commit protocol
phase one: add transactions to each chain (but outputs are locked until 2nd phase completes)
phase two: timestamping chain publishes commit message
yes
but it doesn't need to publish all the details of the transaction
no, but you can construct the timestamping transaction such that it has an input from each stakeholder in the composite transactions
let's say we have OTbtc and OTfrc
so its mere existence is proof that each stakeholder has signed off, presumably because the side of the transaction they care about was published in their chain
why can't we have two-phase OT that is compatible withthe these two
?
some parties in the transaction do care about what is published in the chain but other parties only care about the commit, they have everything else they need outside
for example, externIOU_C in my first example
chainIOU_A would be inside frc or btc in that example
I'm not sure I understand the question
do you think that Trading_across_chains could be extensible for more than two chains?
I get lost with more than two secrets
there's trading across chains using secrets
I don't think Trading_across_chains works
if OTbtc and OTfrc want to trade with each other they could have a compatible lhigh level language that makes secrets transparent for the users
the result of the protocol is that one party has a committed transaction, and the other party has a transaction that's signed but not on the chain
if OTbtc and OTfrc want to trade with each other, they do so directly via the OTMarket api
OT=Open-Transactions here, right?
OTcoin really
I don't understand
say I use OTbtc and you use OTfrc
I want to sell btc for frc, but you don't want btc
you want credit from a trusted party B that issues it on OTfrc chain
The OT server takes care of that, with an as-of-yet-unwritten Ripple solver for the Market API
B wants A credit issued on btc and A wants my btc
so it's btc -> btcA -> frcB -> frc
Is this within a single server?
well, I guess the market API is the high level language I'm talking about then
no, it's within two p2p networks (chains)
bitcoin block chains, or my proposed OTcoin?
that's my confusion
because in OTcoin *all currencies* use the same network
so atomic exchange is trivial
well bitcoin with colored coins, ripplecoin or OTcoin, doesn't matter
in which currency are fees paid?
well with OT, the market api is the high-level language you're talking about
yes
jtimon: whatever currency the transaction generator wants to use
and the miner decides if they trust that currency or not
that should be allowed
sorry, in this point my minds go back to how many cashes could be in a chain, what is cash and philosophy instead of technollogy
so back to your point, you say there will be no need for different chains because btc and frc will exist in the same chain
i don't think of OT servers as "chains", but yes
the OT markets api allows you to pre-authorize cross-currency chains
and the OT server matches these up
well, the state of the OT servers would be the chain
cross-currency trades
well, the public part of the state, they can use private two-phase too, right?
how is ot coin all coins? is the otcoin is like a negative asset that represents a deficit
hold on let me reread and then ill ask q
if so, and transactions can involve chain/public and private/two-phase assets, it's functionally the same thing
im not sure about this
the real economy splits these functions
let me use bitcoin analogies to explain
the clearinghouse is like the blockchain
and an exchange is like a mining pool
mhm, I don't see that last analogy
the mining pool collects a bunch of transactions and posts them in a block
I guess the mining pool does the routing (the bids, ask, etc)
 all that is handled outside of the bitcoin software
i see where you're coming from, it's a mechanical analogy
but these are going to be also T servers
so for an exchange to be successful it needs to be centralized and fast
yes, that's what I call the routing
what you are replacing is the clearinghouse which can (and should) be decentralized. and speed is not an issue.
agh i'm sorry I'm going to miss this but I have to go
someone fill me in later
it's nothing but Ripple financial graphs routing in my head
bye
yes, that's the idea
anyways my point is that i dont think we should combine these functions
but for some use cases you don't need a public clearing house
meaning i think we should stop calling the federated OT an exchange
and that's what I mean by the two-phase/private part
galambo_: we shouldn't; but there are some use cases for distributed exchanges
but its not a product for everybody
well if security is a concern with a centralized exchange it can be run over tor or similar
maaku (~maaku@128.102.238.212) has quit (Quit: maaku)
but i think order matching and quotations should be centralized
anybody can open one themselves but still centralized
yes, those would be the ripple servers or OT servers
hm i dont understand
only the commits occur in the chain
maybe we should try with an example
give me an example trade
I don't see the problem with this decentralization, can you extend that?
an attack? something horrible happening?
the orders should already matched be set when they are put onto the decentralized network
the orders should already matched when they are put onto the decentralized network
if it's about velocity, you can do the routing locally with the offers tha everybody spam (the credit network)
yes
that's what happens
everybody signs and only when the tx gets to the chain is commited
i dont want a system where bid,ask, and quotation are broadcast to the decentralized network
You don't have to broadcast them
the parties can sign privately and send a dummy public tx into the chain as the agreed commit
that's the two-phase version
but those assets are accounted directly by the issuer, not the chain
you need him online to move your holdings of his currency
with publicly issued assets you can move them when the issuer is offline or even death (say the car company that produced the smart car)
yeah but this is all clearing stuff
i dont think bids/asks/quotations should be on this network
thats all im saying
oh, I don't think this is for freicoin launch
we had a converstation on ripple/ripplecoin "vs" OTcoin previously
and it seems we're talking about the same things with different names
or do you mean inside the chain?
inside the chain there's only public keys and ammounts
what they mean is outside
I'm going to bed, it's 2 oclock
see you arround
alright have  a good night :)
alice's bitcoin for bob's freicoin commit
1)
 Alice BTC Debtors debit -> Bob BTC credit
 Bob FRC Debtors -> Alice FRC Holdings credit
eeek
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
[freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
[freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
{Day changed to Sun Nov 11 00:00:00 2012}
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon_ (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
[freenode-info] help freenode weed out clonebots -- please register your IRC nick and auto-identify: http://freenode.net/faq.shtml#nicksetup
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
jtimon_ (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has quit (No Ping reply in 180 seconds.)
jtimon (~quassel@114.Red-83-46-39.dynamicIP.rima-tde.net) has joined #freicoin
Mode #freicoin +cnt by morgan.freenode.net
Channel #freicoin created on Thu Jul 5 21:31:04 2012
* REM [1/1] install
** REM ppa repositories (try to make it in one line)
sudo add-apt-repository ppa:cassou/emacs
sudo add-apt-repository ppa:jd-team/jdownloader
sudo add-apt-repository ppa:texlive-backports/ppa
sudo add-apt-repository ppa:aking1012-com/aircrack-precise
sudo add-apt-repository ppa:indicator-multiload/stable-daily
** first apt-get
sudo apt-get install guake indicator-multiload emacs24 emacs24-el emacs24-common-non-dfsg git vlc exaile kolourpaint chromium gparted gdebi jdownloader aircrack-ng texlive-full
** suspend keyboard
- sudo apt-get install powermanagement-interface hal
- pmi action suspend
- create shortcut
